from datetime import timedelta
from baseconfig import URL_PREFIX

ENVIRONMENT="development"
FLASK_ENV="development"
IS_DOCKER=0
loglevel="DEBUG"
PYTHONUNBUFFERED=1
FLASK_PORT=5000
IS_PROXIED=False
JWT_BLACKLIST_ENABLED=True
JWT_BLACKLIST_TOKEN_CHECKS=['access', 'refresh']
JWT_ACCESS_TOKEN_EXPIRES = timedelta(hours=2)
JWT_REFRESH_TOKEN_EXPIRES = timedelta(days=30)
SECRET_KEY="super secretness"
SSL_DISABLED=True
SCHEME="http"
GOOGLE_APP_ID="need-google-api"
GOOGLE_API_KEY="sshhhh"
GOOGLE_CLIENT_ID="shhhh"
GOOGLE_CLIENT_SECRET="sshhhhh"
GOOGLE_SCOPES = ("https://www.googleapis.com/auth/userinfo.profile",
                 "https://www.googleapis.com/auth/userinfo.email",
                 "https://www.googleapis.com/auth/plus.me",
                 "https://www.googleapis.com/auth/youtube.force-ssl",
                 "https://www.googleapis.com/auth/youtube.readonly"
                 )

GOOGLE_CALLBACK_URL=f"http://yourdomain{URL_PREFIX}/auth/oauth2callback" # Yes it would be better to build
                                                                # this with url_for, but you're goign to need to
                                                                # know it beforehand anyway to set up google oauth
JWT_SECRET_KEY="not telling"
JWT_TOKEN_LOCATION="headers"
JWT_HEADER_NAME="X-API-KEY"
BASE_URL="http://localhost:5000/"
HOSTNAME="localhost"
SQLALCHEMY_DATABASE_URI="postgresql://postgres:123456@localhost:54321/ylive_api"
SQLALCHEMY_EXPIRE_ON_COMMIT = False
SQLALCHEMY_ECHO = True

BETTER_EXCEPTIONS=1
REDIS_HOST="localhost"
REDIS_PORT=63799
#SERVER_NAME="localhost:5000"
PROPOGATE_EXCEPTIONS=True
CACHE_TYPE="redis"
CACHE_REDIS_HOST="localhost"
CACHE_REDIS_PORT="63799"
CACHE_REDIS_URL="redis://localhost:63799/0"
CACHE_DEFAULT_TIMEOUT=3600
CORS_ORIGINS='*'
# seemed to cause trouble CORS_RESOURCES={ "/doc/*": "*", "/api/v1/*": "*"}
CORS_EXPOSE_HEADERS='X-API-KEY'
SESSION_TYPE='filesystem'
# CORS_SUPPORTS_CREDENTIALS=True
# CORS_ORIGINS=""
